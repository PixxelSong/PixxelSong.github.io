<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-01-04T12:30:23.780Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Xunlei</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>从头实现一个个人笔记的APP (1)</title>
    <link href="http://yoursite.com/2018/12/15/%E4%BB%8E%E5%A4%B4%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0%E7%9A%84APP%20(1)/"/>
    <id>http://yoursite.com/2018/12/15/从头实现一个个人笔记的APP (1)/</id>
    <published>2018-12-15T12:37:15.000Z</published>
    <updated>2019-01-04T12:30:23.780Z</updated>
    
    <content type="html"><![CDATA[<h1 id="从头实现一个个人笔记的APP-1"><a href="#从头实现一个个人笔记的APP-1" class="headerlink" title="从头实现一个个人笔记的APP (1)"></a>从头实现一个个人笔记的APP (1)</h1><p>最近遇上了这么一个大作业，本着<del>不重复造轮子</del>（懒）的意图，Github上找了一圈，结果很难受的只找到了大佬们写的非常完整完善完美的项目，对于期末作业来说完成度太高了哇qwq</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="C:\Users\sxl20\AppData\Roaming\Typora\typora-user-images\1545928199709.png" alt="1545928199709" title="">                </div>                <div class="image-caption">1545928199709</div>            </figure><p>还是决定花半个晚上自己写一个哇</p><ul><li><p>首先是最最基础的类设计，涉及到了Note和Group两个实体，由于采用LitePal作为数据库引擎，所以这两个类要继承<em>LitePalSupport</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.sxl20.sakura.Model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.litepal.crud.LitePalSupport;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Grouping</span> <span class="keyword">extends</span> <span class="title">LitePalSupport</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.sxl20.sakura.Model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.litepal.crud.LitePalSupport;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Note</span> <span class="keyword">extends</span> <span class="title">LitePalSupport</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line">    <span class="keyword">private</span> String cont;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> groupID = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getTitle</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> title;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTitle</span><span class="params">(String title)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.title = title;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getCont</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> cont;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCont</span><span class="params">(String cont)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.cont = cont;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getGroupID</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> groupID;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setGroupID</span><span class="params">(<span class="keyword">int</span> groupID)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.groupID = groupID;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>要涉及到数据库，为了自己心平气和的心态，<em>SQliteOpenHelper</em> 肯定是不能用的，</p><p>经过慎重的决定，选用 <em>LitePal</em> 作为数据库框架</p><p>再加上关于操作和UI的考虑，导入一个<em>floatingactionbutton</em></p><p>最终引用库：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">implementation <span class="string">'org.litepal.android:kotlin:3.0.0'</span></span><br><span class="line">androidTestImplementation <span class="string">'com.android.support.test.espresso:espresso-core:3.0.2'</span></span><br><span class="line">implementation <span class="string">'com.android.support:design:28.0.0'</span></span><br><span class="line">implementation <span class="string">'com.android.support:recyclerview-v7:28.0.0'</span></span><br><span class="line">implementation <span class="string">'com.android.support:cardview-v7:28.0.0'</span></span><br><span class="line">implementation <span class="string">"org.jetbrains.anko:anko:0.10.8"</span></span><br><span class="line">implementation <span class="string">'com.getbase:floatingactionbutton:1.10.1'</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p><em>MainActivity</em>的布局如图，是一个简单到有些简陋的 <em>RecyclerView + floatingactionbutton</em> 的布局</p><p><img src="C:\Users\sxl20\AppData\Roaming\Typora\typora-user-images\1545926261285.png" alt="1545926261285"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">android.support.design.widget.CoordinatorLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:fab</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/drawer_layout"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">android.support.design.widget.AppBarLayout</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">android.support.v7.widget.Toolbar</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">"@+id/Toolbar"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">"?attr/actionBarSize"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:background</span>=<span class="string">"?attr/colorPrimary"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:theme</span>=<span class="string">"@style/ThemeOverlay.AppCompat.Dark.ActionBar"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">app:popupTheme</span> = <span class="string">"@style/ThemeOverlay.AppCompat.Light"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">app:layout_scrollFlags</span>=<span class="string">"scroll|enterAlways|snap"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">android.support.design.widget.AppBarLayout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">android.support.v7.widget.RecyclerView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/recycler_view"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_behavior</span>=<span class="string">"@string/appbar_scrolling_view_behavior"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">com.getbase.floatingactionbutton.FloatingActionsMenu</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/fab"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_gravity</span>=<span class="string">"bottom|end"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_margin</span>=<span class="string">"15dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">fab:fab_addButtonColorNormal</span>=<span class="string">"@color/white"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">fab:fab_addButtonColorPressed</span>=<span class="string">"@color/white_pressed"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">fab:fab_addButtonPlusIconColor</span>=<span class="string">"#000000"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">com.getbase.floatingactionbutton.FloatingActionButton</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">"@+id/action_new_note"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">fab:fab_colorNormal</span>=<span class="string">"@color/white"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:src</span>=<span class="string">"@drawable/ic_add"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">fab:fab_title</span>=<span class="string">"Action A"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">fab:fab_colorPressed</span>=<span class="string">"@color/white_pressed"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">com.getbase.floatingactionbutton.FloatingActionButton</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">"@+id/action_search"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:src</span>=<span class="string">"@drawable/ic_select"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">fab:fab_colorNormal</span>=<span class="string">"@color/white"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">fab:fab_title</span>=<span class="string">"Action with a very long name that won\'t fit on the screen"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">fab:fab_colorPressed</span>=<span class="string">"@color/white_pressed"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">com.getbase.floatingactionbutton.FloatingActionButton</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">"@+id/action_group"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">fab:fab_colorNormal</span>=<span class="string">"@color/white"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:src</span>=<span class="string">"@drawable/ic_group"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">fab:fab_title</span>=<span class="string">"Action C"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">fab:fab_colorPressed</span>=<span class="string">"@color/white_pressed"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">com.getbase.floatingactionbutton.FloatingActionsMenu</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">android.support.design.widget.CoordinatorLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p>考虑到要对初次用户友好，所以再<em>MainActivity</em>的<em>onCreate</em>方法中添加对初次启动的判断，<em>SharedPreferences</em>是一个很好的东西</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> isFirst = getSharedPreferences(<span class="string">"notepad"</span>, MODE_PRIVATE).getBoolean(<span class="string">"isFirst"</span>, <span class="literal">true</span>)</span><br><span class="line"><span class="keyword">if</span> (isFirst) &#123;</span><br><span class="line">    <span class="comment">//初始化</span></span><br><span class="line">    getSharedPreferences(<span class="string">"notepad"</span>, MODE_PRIVATE)</span><br><span class="line">        .edit()</span><br><span class="line">        .putBoolean(<span class="string">"isFirst"</span>, <span class="literal">false</span>)</span><br><span class="line">        .apply()</span><br><span class="line">    <span class="keyword">init</span>()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初次启动时建立默认数据库</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">val</span> note = Note()</span><br><span class="line">    note.title = <span class="string">"这是标题"</span></span><br><span class="line">    note.cont = <span class="string">"长按可以删除item鸭w"</span></span><br><span class="line">    note.groupID = <span class="number">1</span></span><br><span class="line">    note.save()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> grouping = Grouping();</span><br><span class="line">    grouping.name = <span class="string">"默认文件夹"</span></span><br><span class="line">    grouping.save()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首页由于采用<em>RecyclerView</em>作为Note的载体，所以一个NoteAdapter适配器是必不可少的了  首先定义一个内部ViewHolder，说起来好像曾经的ListView最大的性能瓶颈就在于ViewHolder呢。</p><p>声明NoteAdapter，继承于以刚刚定义的ViewHolder为泛型的RecyclerAdapter，重写RecyclerAdapter的三个虚方法。</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NoteAdapter</span></span>(<span class="keyword">private</span> <span class="keyword">val</span> list: List&lt;Note&gt;) : RecyclerView.Adapter&lt;NoteAdapter.ViewHolder&gt;()&#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreateViewHolder</span><span class="params">(p0: <span class="type">ViewGroup</span>, p1: <span class="type">Int</span>)</span></span>: ViewHolder &#123;</span><br><span class="line">        <span class="keyword">val</span> view = LayoutInflater</span><br><span class="line">            .from(p0.context)</span><br><span class="line">            .inflate(R.layout.note_layout,p0,<span class="literal">false</span>)</span><br><span class="line">        <span class="keyword">return</span> ViewHolder(view)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">getItemCount</span><span class="params">()</span></span>: <span class="built_in">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> list.size</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onBindViewHolder</span><span class="params">(p0: <span class="type">ViewHolder</span>, p1: <span class="type">Int</span>)</span></span> &#123;</span><br><span class="line">        <span class="keyword">val</span> note = list[p1]</span><br><span class="line">        p0.itemView.title.text = note.title</span><br><span class="line">        p0.itemView.content.text = note.cont</span><br><span class="line"></span><br><span class="line">        p0.itemView.setOnClickListener &#123;</span><br><span class="line">            <span class="keyword">val</span> intent = Intent(p0.itemView.context, NoteActivity::<span class="class"><span class="keyword">class</span>.<span class="title">java</span>)</span></span><br><span class="line">            intent.putExtra(<span class="string">"note"</span>,p0.adapterPosition)</span><br><span class="line">            p0.itemView.context.startActivity(intent)</span><br><span class="line">        &#125;</span><br><span class="line">        p0.itemView.setOnLongClickListener &#123;</span><br><span class="line">            <span class="keyword">val</span> builder = AlertDialog.Builder(MainActivity.instance!!)</span><br><span class="line">            builder.setMessage(<span class="string">"删除之后无法恢复\n真的要删除我\uD83D\uDC34？w(ﾟДﾟ)w"</span>)</span><br><span class="line">            builder.setPositiveButton(<span class="string">"删"</span>) &#123; _, _ -&gt;</span><br><span class="line">                <span class="keyword">val</span> position = p0.adapterPosition</span><br><span class="line">                <span class="keyword">val</span> note = list[position]</span><br><span class="line">                note.delete()</span><br><span class="line">                MainActivity.instance!!.delete(position)</span><br><span class="line">            &#125;</span><br><span class="line">            builder.setNegativeButton(<span class="string">"不删"</span>, <span class="literal">null</span>)</span><br><span class="line">            builder.show()</span><br><span class="line">            <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">ViewHolder</span></span>(view: View) : RecyclerView.ViewHolder(view)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（不得不说为了Kotlin而生的Anko库是真的舒服啊，代码可以变得很清爽干净，现在基本每个采用了Kotlin的项目都会第一时间的 <em>implementation “org.jetbrains.anko:anko:$anko_vision”</em> 的吧）</p><p>（顺便不得不继续吐槽下onLongClickListener这个东西，好好的一个监听器不知道为什么最后非得返回一个<em>Boolean</em>值，导致最后一行多了一个true显得代码很乱，尤其是再androidstuduio中默认进行展开的情况下）</p><p>采用实例活动，所以要对Activity实现一个暴露的instance</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> : <span class="type">AppCompatActivity</span></span>() &#123;</span><br><span class="line">    <span class="keyword">companion</span> <span class="keyword">object</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> instance: MainActivity? = <span class="literal">null</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(R.layout.activity_main)</span><br><span class="line"></span><br><span class="line">        instance = <span class="keyword">this</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>要对以后的接口进行暴露，所以最终<em>MainActivity</em>设计如下</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> : <span class="type">AppCompatActivity</span></span>() &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> noteList: MutableList&lt;Note&gt; = ArrayList()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">companion</span> <span class="keyword">object</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> instance: MainActivity? = <span class="literal">null</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> adapter: NoteAdapter? = <span class="literal">null</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(R.layout.activity_main)</span><br><span class="line"></span><br><span class="line">        LitePal.initialize(<span class="keyword">this</span>)</span><br><span class="line">        LitePal.getDatabase()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">val</span> isFirst = getSharedPreferences(<span class="string">"notepad"</span>, MODE_PRIVATE).getBoolean(<span class="string">"isFirst"</span>, <span class="literal">true</span>)</span><br><span class="line">        <span class="keyword">if</span> (isFirst) &#123;</span><br><span class="line">            <span class="comment">//初始化</span></span><br><span class="line">            getSharedPreferences(<span class="string">"notepad"</span>, MODE_PRIVATE)</span><br><span class="line">                .edit()</span><br><span class="line">                .putBoolean(<span class="string">"isFirst"</span>, <span class="literal">false</span>)</span><br><span class="line">                .apply()</span><br><span class="line">            <span class="keyword">init</span>()</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        instance = <span class="keyword">this</span></span><br><span class="line">        initNotes()</span><br><span class="line">        initView()</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">initNotes</span><span class="params">()</span></span> &#123;</span><br><span class="line">        noteList.clear()</span><br><span class="line">        LitePal.findAll(Note::<span class="class"><span class="keyword">class</span>.<span class="title">java</span>).<span class="title">forEach</span></span>&#123;</span><br><span class="line">            noteList.add(it)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">initView</span><span class="params">()</span></span> &#123;</span><br><span class="line">        adapter = NoteAdapter(noteList)</span><br><span class="line">        recycler_view.layoutManager = LinearLayoutManager(applicationContext)</span><br><span class="line">        recycler_view.adapter = adapter</span><br><span class="line">        initFAB()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">initFAB</span><span class="params">()</span></span>&#123;</span><br><span class="line">        action_new_note.setOnClickListener &#123;</span><br><span class="line">            <span class="keyword">val</span> intent = Intent(applicationContext, NoteActivity::<span class="class"><span class="keyword">class</span>.<span class="title">java</span>)</span></span><br><span class="line">            startActivity(intent)</span><br><span class="line">        &#125;</span><br><span class="line">        action_search.setOnClickListener &#123;</span><br><span class="line">            <span class="keyword">val</span> view = EditText(<span class="keyword">this</span>)</span><br><span class="line">            AlertDialog.Builder(<span class="keyword">this</span>)</span><br><span class="line">                .setTitle(<span class="string">"搜索"</span>)</span><br><span class="line">                .setCancelable(<span class="literal">false</span>)</span><br><span class="line">                .setPositiveButton(<span class="string">"搜索🔍"</span>) &#123; _, _ -&gt;</span><br><span class="line">                    <span class="keyword">val</span> list = LitePal.<span class="keyword">where</span>(<span class="string">"cont like \'%?%\'"</span>,view.text.toString()).find(Note::<span class="class"><span class="keyword">class</span>.<span class="title">java</span>)</span></span><br><span class="line">                    noteList.clear()</span><br><span class="line">                    noteList.addAll(list)</span><br><span class="line">                    reflush()</span><br><span class="line">                &#125;.setNegativeButton(<span class="string">"不搜索惹"</span>) &#123; _, _ -&gt; &#125;</span><br><span class="line">                .setView(view)</span><br><span class="line">                .show()</span><br><span class="line">            Log.d(<span class="string">"dasdas"</span>,view.text.toString())</span><br><span class="line">        &#125;</span><br><span class="line">        action_group.setOnClickListener &#123;</span><br><span class="line">            <span class="keyword">val</span> intent = Intent(<span class="keyword">this</span>, GroupActivity::<span class="class"><span class="keyword">class</span>.<span class="title">java</span>)</span></span><br><span class="line">            startActivity(intent)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//初次启动时建立默认数据库</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">val</span> note = Note()</span><br><span class="line">        note.title = <span class="string">"这是标题"</span></span><br><span class="line">        note.cont = <span class="string">"长按可以删除item鸭w"</span></span><br><span class="line">        note.groupID = <span class="number">1</span></span><br><span class="line">        note.save()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">val</span> grouping = Grouping();</span><br><span class="line">        grouping.name = <span class="string">"默认文件夹"</span></span><br><span class="line">        grouping.save()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">add</span><span class="params">(note: <span class="type">Note</span>)</span></span>&#123;</span><br><span class="line">        noteList.add(note)</span><br><span class="line">        adapter!!.notifyDataSetChanged()</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">delete</span><span class="params">(position: <span class="type">Int</span>)</span></span> &#123;</span><br><span class="line">        noteList.removeAt(position)</span><br><span class="line">        adapter!!.notifyDataSetChanged()</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">getNote</span><span class="params">(position: <span class="type">Int</span>)</span></span> : Note &#123;</span><br><span class="line">        <span class="keyword">return</span> noteList[position]</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">reflush</span><span class="params">()</span></span> = adapter!!.notifyDataSetChanged()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;从头实现一个个人笔记的APP-1&quot;&gt;&lt;a href=&quot;#从头实现一个个人笔记的APP-1&quot; class=&quot;headerlink&quot; title=&quot;从头实现一个个人笔记的APP (1)&quot;&gt;&lt;/a&gt;从头实现一个个人笔记的APP (1)&lt;/h1&gt;&lt;p&gt;最近遇上了这么一个大
      
    
    </summary>
    
      <category term="first" scheme="http://yoursite.com/categories/first/"/>
    
    
      <category term="hello world" scheme="http://yoursite.com/tags/hello-world/"/>
    
      <category term="hello" scheme="http://yoursite.com/tags/hello/"/>
    
  </entry>
  
  <entry>
    <title>信鸽push 集成踩坑</title>
    <link href="http://yoursite.com/2018/12/13/%E4%BF%A1%E9%B8%BDpush%20%E9%9B%86%E6%88%90%E8%B8%A9%E5%9D%91/"/>
    <id>http://yoursite.com/2018/12/13/信鸽push 集成踩坑/</id>
    <published>2018-12-13T15:39:03.000Z</published>
    <updated>2019-01-04T15:35:08.700Z</updated>
    
    <content type="html"><![CDATA[<h1 id="信鸽push-集成踩坑"><a href="#信鸽push-集成踩坑" class="headerlink" title="信鸽push 集成踩坑"></a>信鸽push 集成踩坑</h1><p>信鸽Push也是腾讯爸爸的产品，想着MTA都加进来了，半年前就想做的push要不也顺便加进来得了，</p><p>这一加可就一堆坑啊。。。</p><p>总所周知，安卓端一直没有一个稳定靠谱好用的推送通道，小米的MiPush算超级好用的了，但是受众又太小，只能覆盖到一半左右的用户。</p><p>很多APP的开发逻辑都是分别适配MiPush，华为的HWPush，魅族的MeiZuPush，Google的GMS。在此上还要再写一个庞大的后台进程，保证这个进程不死，接受消息并且Push到通知栏。开发量无比的大（鸽了半年的理由）</p><p>首先还是在android-config闭包里写manifestPlaceholders 和ndk信息</p><p>一如既往的ndk报错。。</p><p>测试集成4.x时整个应用全崩，原因不明，因为信鸽的源码是混淆过的。。</p><p>转而测试3.x，发现这个版本没有集成厂商通道。。。</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//鹅厂信鸽push相关</span></span><br><span class="line"><span class="comment">//信鸽jar</span></span><br><span class="line">implementation <span class="string">'com.tencent.xinge:xinge:3.2.7-Release'</span></span><br><span class="line"><span class="comment">//信鸽华为推送包</span></span><br><span class="line">implementation <span class="string">'com.tencent.xinge:xghw:3.2.8-Release'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//jg包</span></span><br><span class="line">implementation<span class="string">'com.tencent.jg:jg:1.1'</span></span><br><span class="line"><span class="comment">//wup包</span></span><br><span class="line">implementation <span class="string">'com.tencent.wup:wup:1.0.0.E-release'</span></span><br><span class="line"><span class="comment">//mid包</span></span><br><span class="line">implementation <span class="string">'com.tencent.mid:mid:4.0.6-release'</span></span><br><span class="line"><span class="comment">//mipush</span></span><br><span class="line">implementation <span class="string">'com.tencent.xinge:mipush:3.2.8-release'</span></span><br></pre></td></tr></table></figure><p>按照文档，在根BaseActivity的onCreate()周期中调用</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//鹅厂信鸽push</span></span><br><span class="line">XGPushConfig.enableDebug(<span class="keyword">this</span>,<span class="literal">true</span>);</span><br><span class="line">XGPushManager.registerPush(<span class="keyword">this</span>, new XGIOperateCallback() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> void onSuccess(Object <span class="keyword">data</span>, int flag) &#123;</span><br><span class="line">        <span class="comment">//token在设备卸载重装的时候有可能会变</span></span><br><span class="line">        Log.d(<span class="string">"TPush"</span>, <span class="string">"注册成功，设备token为："</span> + <span class="keyword">data</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> void onFail(Object <span class="keyword">data</span>, int errCode, String msg) &#123;</span><br><span class="line">        Log.d(<span class="string">"TPush"</span>, <span class="string">"注册失败，错误码："</span> + errCode + <span class="string">",错误信息："</span> + msg);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line">XGPushConfig.setMiPushAppId(<span class="keyword">this</span>, <span class="string">"2882303761517291660"</span>);</span><br><span class="line">XGPushConfig.setMiPushAppKey(<span class="keyword">this</span>, <span class="string">"5371729120660"</span>);</span><br><span class="line"><span class="comment">//打开第三方推送</span></span><br><span class="line">XGPushConfig.enableOtherPush(<span class="keyword">this</span>, <span class="literal">true</span>);</span><br></pre></td></tr></table></figure><p>运行报错。。。</p><p>最终在知乎里看到要把MTA的调用放在信鸽Push后面，先信鸽再MTA。</p><p>一直搞不清这个逻辑，但是运行不报错了。。。</p><p>测试推送，正常。先凑合用一下吧。。。。</p><p>昨天的MTA数据终于也到了，但是发现我最关系最需要的用户行为，生命周期还是拿不到，，，</p><p>迫不得已打开了官网那个客服窗口，，，（客服的代码都比我写的好系列。。。）</p><p>好吧最终在根BaseActivity的onPause()周期和onResume()中分别添加如下代码</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> void onPause() &#123;</span><br><span class="line">    <span class="keyword">super</span>.onPause();</span><br><span class="line">    <span class="comment">//AVAnalytics.onPause(this);</span></span><br><span class="line">    StatService.onPause(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> void onResume() &#123;</span><br><span class="line">    <span class="keyword">super</span>.onResume();</span><br><span class="line">    <span class="comment">//AVAnalytics.onResume(this);</span></span><br><span class="line">    StatService.onResume(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个周期函数的调用在文档里完全没有体现，，，鹅厂的文档真是。。。</p><p>。再一次的观察测试又得等明天了。。。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;信鸽push-集成踩坑&quot;&gt;&lt;a href=&quot;#信鸽push-集成踩坑&quot; class=&quot;headerlink&quot; title=&quot;信鸽push 集成踩坑&quot;&gt;&lt;/a&gt;信鸽push 集成踩坑&lt;/h1&gt;&lt;p&gt;信鸽Push也是腾讯爸爸的产品，想着MTA都加进来了，半年前就想做的
      
    
    </summary>
    
      <category term="first" scheme="http://yoursite.com/categories/first/"/>
    
    
      <category term="hello world" scheme="http://yoursite.com/tags/hello-world/"/>
    
      <category term="hello" scheme="http://yoursite.com/tags/hello/"/>
    
  </entry>
  
  <entry>
    <title>MTA 腾讯爸爸的移动分析</title>
    <link href="http://yoursite.com/2018/12/12/MTA%20%E8%85%BE%E8%AE%AF%E7%88%B8%E7%88%B8%E7%9A%84%E7%A7%BB%E5%8A%A8%E5%88%86%E6%9E%90/"/>
    <id>http://yoursite.com/2018/12/12/MTA 腾讯爸爸的移动分析/</id>
    <published>2018-12-12T14:55:15.000Z</published>
    <updated>2019-01-04T15:28:23.405Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MTA-腾讯爸爸的移动分析"><a href="#MTA-腾讯爸爸的移动分析" class="headerlink" title="MTA 腾讯爸爸的移动分析"></a>MTA 腾讯爸爸的移动分析</h1><p>最近在维护的东西，由于以前用的LeanCloud现在即将关闭移动分析这个功能，所以观望了半天最终决定用腾讯爸爸的MTA做新的移动分析了。</p><h4 id="导入包"><a href="#导入包" class="headerlink" title="导入包"></a>导入包</h4><p>根据文档，在Gradle中导入包</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//鹅厂mta相关 mta包稳定版和测试版本二选一，mid包必须要添加 ，可视化埋点根据需要添加</span></span><br><span class="line"><span class="comment">//mta 3.4.7 稳定版</span></span><br><span class="line">implementation <span class="string">'com.qq.mta:mta:3.4.7-Release'</span></span><br><span class="line"><span class="comment">//mid jar包 必须添加</span></span><br><span class="line">implementation <span class="string">'com.tencent.mid:mid:4.06-Release'</span></span><br><span class="line"><span class="comment">//可视化埋点的相关jar包 （根据需要添加），可视化埋点的版本号，和必须和当前MTA的版本号必须匹配使用 需要在配置文件中增加配置，具体请参考 高级功能中可视化埋点的接入。</span></span><br><span class="line"><span class="comment">//compile 'com.qq.visual:visual:3.4.0.1-beta'</span></span><br></pre></td></tr></table></figure><p>在android -defaultConfig 闭包下写清manifestPlaceholders配置信息</p><p>配置ndk信息时报错，不知为什么，最终决定删掉这个配置，编译通过，运行正常。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="C:\Users\sxl20\AppData\Roaming\Typora\typora-user-images\1546612978293.png" alt="1546612978293" title="">                </div>                <div class="image-caption">1546612978293</div>            </figure><h4 id="添加基础统计代码"><a href="#添加基础统计代码" class="headerlink" title="添加基础统计代码"></a>添加基础统计代码</h4><p>这个项目有根BaseActivity，所以在BaseActivity的onCreate()中添加</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//鹅厂mta相关</span></span><br><span class="line"><span class="comment">// 打开Logcat输出，上线时，一定要关闭</span></span><br><span class="line">StatConfig.setDebugEnable(<span class="literal">false</span>);</span><br><span class="line"><span class="comment">// 注册activity生命周期，统计时长</span></span><br><span class="line">StatService.registerActivityLifecycleCallbacks(getApplication());</span><br></pre></td></tr></table></figure><p>集成验证测试通过，但是只能够看到新增用户1，得不到其余需要的反馈数据，比如用户路径，生命周期，比如渠道分析</p><p>一番努力检查无果。鸽。。。</p><p>查阅相关文档，没有资料</p><p>最终发现原来鹅厂MTA的数据有延迟，要等24小时之后才会出统计结果。。。想砍人</p><h4 id="自定义参数"><a href="#自定义参数" class="headerlink" title="自定义参数"></a>自定义参数</h4><p>LeanCloud另一个最好用的功能是在线参数了。但是经过厂商的调整，在线参数合并到存储中。导致费用大大增加。MTA平台有在线参数功能，尝试集成进来。。。</p><p>在MainActivity的onCreate()方法中</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">getTencentOnlineConfig</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (isConnectedInternet(<span class="keyword">this</span>))&#123;</span><br><span class="line">        <span class="keyword">val</span> exam_result = getCustomProperty(<span class="keyword">this</span>, <span class="string">"ExamResult"</span>)</span><br><span class="line">        <span class="keyword">val</span> run = getCustomProperty(<span class="keyword">this</span>, <span class="string">"Running"</span>)</span><br><span class="line">        <span class="keyword">val</span> course = getCustomProperty(<span class="keyword">this</span>, <span class="string">"Course"</span>)</span><br><span class="line">        <span class="keyword">val</span> examArrange = getCustomProperty(<span class="keyword">this</span>, <span class="string">"ExamSchedule"</span>)</span><br><span class="line">        <span class="keyword">val</span> courseSelection = getCustomProperty(<span class="keyword">this</span>, <span class="string">"Selection"</span>)</span><br><span class="line">        <span class="keyword">val</span> selectedLesson = getCustomProperty(<span class="keyword">this</span>, <span class="string">"Selection_Semester"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我觉得安卓很坑的一个设计在于UIThread中不能进行耗时请求，比如网络请求啥的，但是在一些非常必要的时候，这个设计大大增加了开发难度。在需要在线参数这功能时，如果自己用Json来实现，将会面对非常严重的异步逻辑问题，而且甚至不一定能解决，。</p><p>集成进来之后，测试时发现，服务器端改变参数之后，客户端没有及时的得到数据。调试半天无果，又开始怀疑这玩意本身就有问题</p><p>查了一堆文档，果然发现，，，服务器端有10分钟的延迟给客户端。。。辣鸡MTA！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;MTA-腾讯爸爸的移动分析&quot;&gt;&lt;a href=&quot;#MTA-腾讯爸爸的移动分析&quot; class=&quot;headerlink&quot; title=&quot;MTA 腾讯爸爸的移动分析&quot;&gt;&lt;/a&gt;MTA 腾讯爸爸的移动分析&lt;/h1&gt;&lt;p&gt;最近在维护的东西，由于以前用的LeanCloud现在
      
    
    </summary>
    
      <category term="first" scheme="http://yoursite.com/categories/first/"/>
    
    
      <category term="hello world" scheme="http://yoursite.com/tags/hello-world/"/>
    
      <category term="hello" scheme="http://yoursite.com/tags/hello/"/>
    
  </entry>
  
  <entry>
    <title>今天的PAT也是一片凉凉呢</title>
    <link href="http://yoursite.com/2018/12/09/%E4%BB%8A%E5%A4%A9%E7%9A%84PAT%E4%B9%9F%E6%98%AF%E4%B8%80%E7%89%87%E5%87%89%E5%87%89%E5%91%A2/"/>
    <id>http://yoursite.com/2018/12/09/今天的PAT也是一片凉凉呢/</id>
    <published>2018-12-09T15:45:19.000Z</published>
    <updated>2019-01-04T12:30:21.672Z</updated>
    
    <content type="html"><![CDATA[<h1 id="今天的PAT也是一片凉凉呢"><a href="#今天的PAT也是一片凉凉呢" class="headerlink" title="今天的PAT也是一片凉凉呢"></a>今天的PAT也是一片凉凉呢</h1><p>一觉睡醒发现已经11：30了，再想想总觉得自己好像忘了什么事，直到吃完饭才想起来卧槽今天要考PAT啊！！还好传媒离得近，考试过程中面对或许年纪比我还大的Eclipcs，被IDEA惯坏的人怎么能吃这个苦qwq，最终40分，可能再也没有比我还菜的人了。。</p><h3 id="1-Google-Recruitment-（20-分）"><a href="#1-Google-Recruitment-（20-分）" class="headerlink" title="1. Google Recruitment （20 分）"></a>1. Google Recruitment （20 分）</h3><p>​    <a href="https://pintia.cn/problem-sets/994805342720868352/problems/1071785055080476672" target="_blank" rel="noopener">PAT 1152</a></p><blockquote><p>Now you are asked to solve a more general problem: find the first K-digit prime in consecutive digits of any given L-digit number.</p><p>现在要求您解决一个更普遍的问题：找到任何给定L位数的连续数字中的第一个K位数。</p><h4 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h4><p>Each input file contains one test case. Each case first gives in a line two positive integers: L (≤ 1,000) and K (&lt; 10), which are the numbers of digits of the given number and the prime to be found, respectively. Then the L-digit number N is given in the next line.</p><h4 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h4><p>For each test case, print in a line the first K-digit prime in consecutive digits of N. If such a number does not exist, output <code>404</code> instead. Note: the leading zeroes must also be counted as part of the K digits. For example, to find the 4-digit prime in 200236, 0023 is a solution. However the first digit 2 must not be treated as a solution 0002 since the leading zeroes are not in the original number.</p></blockquote><p>说实在的考场上第一眼看见这个破题一脸懵逼。这啥子鬼玩意。再看看Sample 1(输出一个0位数中第一个5位素数)更是一脸懵，这该不会是要我一位一位的枚举一遍吧emmm</p><p>再仔细一看，发现了一句”如果找不到这么一个数就输出404”，本着骗分的原则，先交了这么一份神奇的代码，成功骗到3分。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">         String s1 = scanner.next();</span><br><span class="line">         String s2 = scanner.next();</span><br><span class="line">         String s3 = scanner.next();</span><br><span class="line">        System.out.println(<span class="string">"404"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>后来嘛想了下，不就是骗分嘛，反正也不指望能做出来，本着150报名费不能白交的心态。我还真就枚举了一遍每一位。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> num = scanner.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> dig = scanner.nextInt();</span><br><span class="line">        String s = scanner.next();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= num - dig; i++) &#123;</span><br><span class="line">            String sss = s.substring(i,i + dig);</span><br><span class="line">            <span class="keyword">int</span> x = Integer.parseInt(sss);</span><br><span class="line">            <span class="keyword">if</span> (isPrime(x))&#123;</span><br><span class="line">                System.out.println(x);</span><br><span class="line">                System.exit(<span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="number">404</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isPrime</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (x == <span class="number">0</span> || x == <span class="number">1</span>) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; Math.sqrt(x); i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (x % i == <span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这么大逆不道的算法交上去之后，想不到竟然过了 6 / 7 个Case，顿时一脸懵，这题标答该不会就是暴力吧。。。</p><p>还有一个case 不知道咋就没过去，算了也就先不管了，反正骗到18分了。</p><p>（上次有个傻逼的狼人杀题就是暴力做，这次又一个暴力的。。。这PAT也太暴力了吧）</p><h3 id="2-Decode-Registration-Card-of-PAT-（25-分）"><a href="#2-Decode-Registration-Card-of-PAT-（25-分）" class="headerlink" title="2. Decode Registration Card of PAT （25 分）"></a>2. Decode Registration Card of PAT （25 分）</h3><p>​    <a href="https://pintia.cn/problem-sets/994805342720868352/problems/1071785190929788928" target="_blank" rel="noopener">PAT 1153</a></p><blockquote><p>A registration card number of PAT consists of 4 parts:</p><ul><li>the 1st letter represents the test level, namely, <code>T</code> for the top level, <code>A</code> for advance and <code>B</code> for basic;</li><li>the 2nd - 4th digits are the test site number, ranged from 101 to 999;</li><li>the 5th - 10th digits give the test date, in the form of <code>yymmdd</code>;</li><li>finally the 11th - 13th digits are the testee’s number, ranged from 000 to 999.</li></ul><p>Now given a set of registration card numbers and the scores of the card owners, you are supposed to output the various statistics according to the given queries.</p><p>PAT的注册卡号由4部分组成：</p><ul><li>第一个字母代表测试级别，即T为顶级，A为甲级，B为乙级;</li><li>第2至第4位是考点编号，范围从101到999;</li><li>第5-10位数字以yymmdd的形式给出考试日期;</li><li>第11位至第13位是受试者的号码，范围从000到999。</li></ul><p>现在给出一组注册卡号和的分数，您应该根据给定的查询输出各种统计数据。</p><h4 id="Input-Specification-1"><a href="#Input-Specification-1" class="headerlink" title="Input Specification:"></a>Input Specification:</h4><p>Each input file contains one test case. For each case, the first line gives two positive integers N (≤104) and M (≤100), the numbers of cards and the queries, respectively.</p><p>Then N lines follow, each gives a card number and the owner’s score (integer in [0,100]), separated by a space.</p><p>After the info of testees, there are M lines, each gives a query in the format <code>Type Term</code>, where</p><ul><li><code>Type</code> being 1 means to output all the testees on a given level, in non-increasing order of their scores. The corresponding <code>Term</code> will be the letter which specifies the level;</li><li><code>Type</code> being 2 means to output the total number of testees together with their total scores in a given site. The corresponding <code>Term</code> will then be the site number;</li><li><code>Type</code> being 3 means to output the total number of testees of every site for a given test date. The corresponding <code>Term</code> will then be the date, given in the same format as in the registration card.</li></ul><h4 id="Output-Specification-1"><a href="#Output-Specification-1" class="headerlink" title="Output Specification:"></a>Output Specification:</h4><p>For each query, first print in a line <code>Case #: input</code>, where <code>#</code> is the index of the query case, starting from 1; and <code>input</code> is a copy of the corresponding input query. Then output as requested:</p><ul><li>for a type 1 query, the output format is the same as in input, that is, <code>CardNumber Score</code>. If there is a tie of the scores, output in increasing alphabetical order of their card numbers (uniqueness of the card numbers is guaranteed);</li><li>for a type 2 query, output in the format <code>Nt Ns</code> where <code>Nt</code> is the total number of testees and <code>Ns</code> is their total score;</li><li>for a type 3 query, output in the format <code>Site Nt</code> where <code>Site</code> is the site number and <code>Nt</code> is the total number of testees at <code>Site</code>. The output must be in non-increasing order of <code>Nt</code>‘s, or in increasing order of site numbers if there is a tie of <code>Nt</code>.</li></ul><p>If the result of a query is empty, simply print <code>NA</code>.</p></blockquote><p>受限于自己贫瘠的英文水平，第一遍读题勉强读出来这是一个数据库类的水题，然后又勉强读出来一个用来骗分的例子，输出“NA”嘛w  交了一编，一个没过，哦豁完蛋（不过最起码不用处理错误例子了）</p><p>既然骗不到分，那也就凉凉了啊，Java肯定超时，C/C++我又不会。这破考点还没别的东西，总不能写SQL吧</p><p> 到最后发现啥都不会了，又回来写这玩意，第一遍用了仨HashMap，哦豁完蛋全部超时。不过改成TreeMap竟然过了几个case 又骗来点分。。。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;今天的PAT也是一片凉凉呢&quot;&gt;&lt;a href=&quot;#今天的PAT也是一片凉凉呢&quot; class=&quot;headerlink&quot; title=&quot;今天的PAT也是一片凉凉呢&quot;&gt;&lt;/a&gt;今天的PAT也是一片凉凉呢&lt;/h1&gt;&lt;p&gt;一觉睡醒发现已经11：30了，再想想总觉得自己好像忘
      
    
    </summary>
    
      <category term="first" scheme="http://yoursite.com/categories/first/"/>
    
    
      <category term="hello world" scheme="http://yoursite.com/tags/hello-world/"/>
    
      <category term="hello" scheme="http://yoursite.com/tags/hello/"/>
    
  </entry>
  
  <entry>
    <title>关于酷安首页Fragment的尝试实现</title>
    <link href="http://yoursite.com/2018/11/15/%E5%85%B3%E4%BA%8E%E9%85%B7%E5%AE%89%E9%A6%96%E9%A1%B5Fragment%E7%9A%84%E5%B0%9D%E8%AF%95%E5%AE%9E%E7%8E%B0/"/>
    <id>http://yoursite.com/2018/11/15/关于酷安首页Fragment的尝试实现/</id>
    <published>2018-11-15T07:48:18.000Z</published>
    <updated>2018-12-27T16:30:55.917Z</updated>
    
    <content type="html"><![CDATA[<h1 id="关于酷安首页Fragment的尝试实现"><a href="#关于酷安首页Fragment的尝试实现" class="headerlink" title="关于酷安首页Fragment的尝试实现"></a>关于酷安首页Fragment的尝试实现</h1><ul><li><p>需求List</p><blockquote><p>ViewPage承载多个Fragment</p><p>每个Fragment都以LazyFragmeng呈现</p><p>Fragment首次可见时出现数据加载页面</p><p>Fragmeng再次可见时保留内容</p><p>Fragment中内容全部为RecyclerView</p></blockquote></li></ul><h3 id="ViewPage承载多个Fragment"><a href="#ViewPage承载多个Fragment" class="headerlink" title="ViewPage承载多个Fragment"></a>ViewPage承载多个Fragment</h3><p>首先酷安的首页是很典型的TabLayout + FragmentViewPage实现Fragment</p><p>所以这里可以使用最典型的通用方案</p><ul><li><p>首先是布局代码 非常简朴的TabLayout + ViewPage</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">android.support.design.widget.TabLayout</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/tab_layout"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"48dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_scrollFlags</span>=<span class="string">"snap"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:tabIndicatorColor</span>=<span class="string">"#ffff8c"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:tabSelectedTextColor</span>=<span class="string">"#645332"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:tabTextColor</span>=<span class="string">"#000000"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">android.support.v4.view.ViewPager</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/viewPager"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginTop</span>=<span class="string">"48dp"</span>/&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>之后定义一个dataClass 将Fragment和它的Title绑定</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">data</span> <span class="class"><span class="keyword">class</span> <span class="title">FragmentTab</span></span>(</span><br><span class="line">    <span class="keyword">val</span> title: String,</span><br><span class="line">    <span class="keyword">val</span> fragment: Fragment</span><br><span class="line">)</span><br></pre></td></tr></table></figure></li><li><p>在MainActivity中调用initTabBar方法初始化数据</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">initTabBar</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">val</span> fragmentTabs = ArrayList&lt;FragmentTab&gt;()</span><br><span class="line">        fragmentTabs.add(FragmentTab(<span class="string">"title1"</span>,BlankFragment()))</span><br><span class="line">        fragmentTabs.add(FragmentTab(<span class="string">"title2"</span>,BlankFragment2()))</span><br><span class="line">        fragmentTabs.add(FragmentTab(<span class="string">"title3"</span>,BlankFragment3()))</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">val</span> adapter = <span class="keyword">object</span> :</span><br><span class="line">        FragmentPagerAdapter(supportFragmentManager) &#123;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">getItem</span><span class="params">(i: <span class="type">Int</span>)</span></span>: Fragment &#123;</span><br><span class="line">                <span class="keyword">return</span> fragmentTabs[i].fragment</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">getCount</span><span class="params">()</span></span>: <span class="built_in">Int</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> fragmentTabs.size</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">getPageTitle</span><span class="params">(position: <span class="type">Int</span>)</span></span>: CharSequence? &#123;</span><br><span class="line">                <span class="keyword">return</span> fragmentTabs[position].title</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        viewPager.adapter = adapter</span><br><span class="line">        tab_layout.setupWithViewPager(viewPager, <span class="literal">true</span>)</span><br><span class="line">        tab_layout.getTabAt(<span class="number">1</span>)!!.select()</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="每个Fragment都以LazyFragmeng呈现"><a href="#每个Fragment都以LazyFragmeng呈现" class="headerlink" title="每个Fragment都以LazyFragmeng呈现"></a>每个Fragment都以LazyFragmeng呈现</h3><blockquote><p>LazyFragment :  ViewPager + Fragment 实现左右切换的页面，默认会加载当前Fragment和相邻的Fragment数据，为了更好的用户体验，最好是切到当前Fragment再加载数据，这样会为用户节约很多流量，另外ViewPager的setOffscreenPageLimit(n)可以设置缓存页面，当前页面的相邻n各页面都会被缓存。做到当前Fragment加载数据需要重写setUserVisibleHint方法，一般网上Fragment 懒加载实现方法都是如下这样的：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="keyword">protected</span> <span class="keyword">boolean</span> isVisible;</span><br><span class="line">&gt; <span class="meta">@Override</span></span><br><span class="line">&gt; <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserVisibleHint</span><span class="params">(<span class="keyword">boolean</span> isVisibleToUser)</span> </span>&#123;</span><br><span class="line">&gt;     <span class="keyword">super</span>.setUserVisibleHint(isVisibleToUser);</span><br><span class="line">&gt;     <span class="keyword">if</span> (getUserVisibleHint()) &#123;</span><br><span class="line">&gt;         isVisible = <span class="keyword">true</span>;</span><br><span class="line">&gt;         onVisible();</span><br><span class="line">&gt;     &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">&gt;         isVisible = <span class="keyword">false</span>;</span><br><span class="line">&gt;         onInvisible();</span><br><span class="line">&gt;     &#125;</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onVisible</span><span class="params">()</span> </span>&#123;</span><br><span class="line">&gt;     lazyLoad();</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">lazyLoad</span><span class="params">()</span> </span>&#123;</span><br><span class="line">&gt;     <span class="keyword">if</span> (!isVisible) &#123;</span><br><span class="line">&gt;         <span class="keyword">return</span>;</span><br><span class="line">&gt;     &#125;</span><br><span class="line">&gt;     <span class="comment">//getData();//数据请求</span></span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onInvisible</span><span class="params">()</span> </span>&#123;</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote></blockquote><blockquote><p>对，这样确实实现了懒加载，然后实际开发中，请求数据完毕，会绑定RecyclerView数据源，结果会发现报空指针异常，原来是setUserVisibleHint方法会比onCreateView先走，RecyclerView肯定是null，基于此，我们可以再添加一个标志位，判断初始化是否完成，然后再去请求数据，这样就不会有问题了，完整代码如下：</p></blockquote><blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LazyFragmeng</span> <span class="keyword">extends</span> <span class="title">Fragment</span> </span>&#123;</span><br><span class="line">&gt; </span><br><span class="line">&gt;     <span class="keyword">private</span> <span class="keyword">boolean</span> isPrepared;</span><br><span class="line">&gt; </span><br><span class="line">&gt;     <span class="keyword">private</span> <span class="keyword">boolean</span> isVisible;</span><br><span class="line">&gt;     <span class="meta">@Override</span></span><br><span class="line">&gt;     <span class="function"><span class="keyword">public</span> View <span class="title">onCreateView</span><span class="params">(LayoutInflater inflater, ViewGroup container,Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">&gt;         <span class="keyword">return</span> inflater.inflate(R.layout.weiyan, container, <span class="keyword">false</span>);</span><br><span class="line">&gt;     &#125;</span><br><span class="line">&gt;     <span class="meta">@Override</span></span><br><span class="line">&gt;     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onViewCreated</span><span class="params">(View view, @Nullable Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">&gt;         <span class="keyword">super</span>.onViewCreated(view, savedInstanceState);</span><br><span class="line">&gt;         isPrepared = <span class="keyword">true</span>;</span><br><span class="line">&gt;         lazyLoad();</span><br><span class="line">&gt;     &#125;</span><br><span class="line">&gt;     <span class="meta">@Override</span></span><br><span class="line">&gt;     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserVisibleHint</span><span class="params">(<span class="keyword">boolean</span> isVisibleToUser)</span> </span>&#123;</span><br><span class="line">&gt;         <span class="keyword">super</span>.setUserVisibleHint(isVisibleToUser);</span><br><span class="line">&gt;         <span class="comment">//懒加载</span></span><br><span class="line">&gt;         <span class="keyword">if</span> (getUserVisibleHint()) &#123;</span><br><span class="line">&gt;             isVisible = <span class="keyword">true</span>;</span><br><span class="line">&gt;             onVisible();</span><br><span class="line">&gt;         &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">&gt;             isVisible = <span class="keyword">false</span>;</span><br><span class="line">&gt;             onInvisible();</span><br><span class="line">&gt;         &#125;</span><br><span class="line">&gt;     &#125;</span><br><span class="line">&gt;     <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onVisible</span><span class="params">()</span> </span>&#123;</span><br><span class="line">&gt;         lazyLoad();</span><br><span class="line">&gt;     &#125;</span><br><span class="line">&gt;     <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">lazyLoad</span><span class="params">()</span> </span>&#123;</span><br><span class="line">&gt;         <span class="keyword">if</span> (!isVisible || !isPrepared) &#123;</span><br><span class="line">&gt;             <span class="keyword">return</span>;</span><br><span class="line">&gt;         &#125;</span><br><span class="line">&gt;         <span class="comment">//getData();//数据请求</span></span><br><span class="line">&gt;     &#125;</span><br><span class="line">&gt;     <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onInvisible</span><span class="params">()</span> </span>&#123;</span><br><span class="line">&gt;     &#125;</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; </span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;关于酷安首页Fragment的尝试实现&quot;&gt;&lt;a href=&quot;#关于酷安首页Fragment的尝试实现&quot; class=&quot;headerlink&quot; title=&quot;关于酷安首页Fragment的尝试实现&quot;&gt;&lt;/a&gt;关于酷安首页Fragment的尝试实现&lt;/h1&gt;&lt;ul&gt;

      
    
    </summary>
    
      <category term="first" scheme="http://yoursite.com/categories/first/"/>
    
    
      <category term="hello world" scheme="http://yoursite.com/tags/hello-world/"/>
    
      <category term="hello" scheme="http://yoursite.com/tags/hello/"/>
    
  </entry>
  
  <entry>
    <title>Hexo？？？年轻人的第一个博客</title>
    <link href="http://yoursite.com/2018/10/15/Hexo%EF%BC%9F%EF%BC%9F%EF%BC%9F%E5%B9%B4%E8%BD%BB%E4%BA%BA%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2018/10/15/Hexo？？？年轻人的第一个博客/</id>
    <published>2018-10-15T07:28:55.000Z</published>
    <updated>2019-01-02T15:40:35.389Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hexo？？？年轻人的第一个博客"><a href="#Hexo？？？年轻人的第一个博客" class="headerlink" title="Hexo？？？年轻人的第一个博客"></a>Hexo？？？年轻人的第一个博客</h1><blockquote><p> Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Heroku上，是搭建博客的首选框架。Hexo 同时也是 GitHub上 的开源项目，参见：<a href="http://link.zhihu.com/?target=https%3A//github.com/hexojs/hexo" target="_blank" rel="noopener">hexojs/hexo</a> </p></blockquote><p>简单来说，Hexo就是一个自己搭建博客的框架</p><h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><p><a href="http://nodejs.org/" target="_blank" rel="noopener">官网</a></p><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><ol><li><p>打开PowerShell（A）并运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure></li><li><p>进入一个想要放置位置的文件夹，在此处运行Powershell（A）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init</span><br></pre></td></tr></table></figure></li><li><p>在此处继续运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></li><li><p>打开浏览器访问127.0.0.1:4000就可以看到丑丑的初始Hexo了欸</p></li></ol><h3 id="hexo换主题"><a href="#hexo换主题" class="headerlink" title="hexo换主题"></a>hexo换主题</h3><ol><li><p>在根位置打开PowerShell运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> git@github.com:yscoder/hexo-theme-indigo.git themes/indigo</span><br></pre></td></tr></table></figure></li><li><p>编辑根目录的_config.yml</p><p>拉到最底下73 - 76行</p><p>把theme改成</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">indigo</span></span><br></pre></td></tr></table></figure></li><li><p>重新运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Hexo？？？年轻人的第一个博客&quot;&gt;&lt;a href=&quot;#Hexo？？？年轻人的第一个博客&quot; class=&quot;headerlink&quot; title=&quot;Hexo？？？年轻人的第一个博客&quot;&gt;&lt;/a&gt;Hexo？？？年轻人的第一个博客&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt; 
      
    
    </summary>
    
      <category term="first" scheme="http://yoursite.com/categories/first/"/>
    
    
      <category term="hello world" scheme="http://yoursite.com/tags/hello-world/"/>
    
      <category term="hello" scheme="http://yoursite.com/tags/hello/"/>
    
  </entry>
  
</feed>
